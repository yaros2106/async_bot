from aiogram import types, Router, F
from aiogram.filters import CommandStart, Command
from sqlalchemy.ext.asyncio import AsyncSession

from filters.chat_types import ChatTypeFilter
from handlers.menu_processing import get_menu_content

from keyboards.inline import MenuCallBack
from keyboards.reply import phone_request_keyboard
from database.orm_query import orm_add_to_cart, orm_add_user


user_private_router = Router()
user_private_router.message.filter(ChatTypeFilter(['private']))  # chat type for this router to work


@user_private_router.callback_query(F.data == "order_delivery")
async def process_order_callback(callback: types.CallbackQuery):
    delivery_options = "\n".join([
        "üöÄ –ö—É—Ä—å–µ—Ä–æ–º (–¥–æ 30 –º–∏–Ω—É—Ç)",
        "üè† –°–∞–º–æ–≤—ã–≤–æ–∑ –∏–∑ –∫–æ—Ñ–µ–π–Ω–∏",
        "üìç –î–æ—Å—Ç–∞–≤–∫–∞ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å—ã (–Ø–Ω–¥–µ–∫—Å, Delivery Club)"
    ])

    text = f"<b>–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏:</b>\n{delivery_options}\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–±:"

    await callback.message.answer(
        text,
        parse_mode="HTML",
        reply_markup=types.ReplyKeyboardMarkup(
            keyboard=[
                [types.KeyboardButton(text="üöÄ –ö—É—Ä—å–µ—Ä–æ–º")],
                [types.KeyboardButton(text="üè† –°–∞–º–æ–≤—ã–≤–æ–∑")],
                [types.KeyboardButton(text="üìç –î–æ—Å—Ç–∞–≤–∫–∞ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å—ã")]
            ],
            resize_keyboard=True
        )
    )
    await callback.answer()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é "–ó–∞–≥—Ä—É–∑–∫–∞..."


@user_private_router.message(lambda msg: msg.text in ["üöÄ –ö—É—Ä—å–µ—Ä–æ–º", "üè† –°–∞–º–æ–≤—ã–≤–æ–∑", "üìç –î–æ—Å—Ç–∞–≤–∫–∞ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å—ã"])
async def ask_phone(message: types.Message):
    await message.answer(
        "–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:",
        reply_markup=phone_request_keyboard()
    )

@user_private_router.message(lambda msg: msg.contact)
async def process_phone(message: types.Message):
    await message.answer(
        "–°–ø–∞—Å–∏–±–æ! –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç. –û–ø–µ—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.",
        reply_markup=types.ReplyKeyboardRemove()
    )


@user_private_router.message(CommandStart())
async def start_cmd(message: types.Message, session: AsyncSession):
    media, reply_markup = await get_menu_content(session, level=0, menu_name='main')
    await message.answer_photo(media.media, caption=media.caption, reply_markup=reply_markup)


async def add_to_cart(callback: types.CallbackQuery, callback_data: MenuCallBack, session: AsyncSession):
    user = callback.from_user
    await orm_add_user(
        session,
        user_id=user.id,
        first_name=user.first_name,
        last_name=user.last_name,
        phone=None,
    )
    await orm_add_to_cart(session, user_id=user.id, product_id=callback_data.product_id)
    await callback.answer("–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É.")


@user_private_router.callback_query(MenuCallBack.filter())
async def user_menu(callback: types.CallbackQuery, callback_data: MenuCallBack, session: AsyncSession):

    if callback_data.menu_name == "add_to_cart":
        await add_to_cart(callback, callback_data, session)
        return

    media, reply_markup = await get_menu_content(
        session,
        level=callback_data.level,
        menu_name=callback_data.menu_name,
        category=callback_data.category,
        page=callback_data.page,
        product_id=callback_data.product_id,
        user_id=callback.from_user.id,
    )

    await callback.message.edit_media(media=media, reply_markup=reply_markup)
    await callback.answer()




